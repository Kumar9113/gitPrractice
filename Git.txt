Kumar
Kumar
cat "name.txt"


git init
ls
git status
git add .
git commit -m "Initial"
cat "name.txt"
git restore --staged name.txt(just un add data)

 git log(get all commit ids)
 rm -rf name.txt (delet file)
 git reset commitid 
 -- if check git status that shows like deletd:name.txt(in red)
Then
git add . (modified will add )(green)
git status

--create file
touch surname.txt(New-Item -ItemType File hotel.txt)
git add.
git status
(Show like name.txt->surname.txt)


Git Hub

git remote add origin htto:bbhdugduh

git remote -v (show all remote which are conneted to that project)

git push origin master


How to work in existing project


fork that project to your git Hub

git remote add upstream url(clone url)

git remote -v (Shows origin and upstream)

rmdir  .git (uninitilized the git)






----------------------------------------------------------
Git Class
----------------------------------------------------------

--version control
make different version  v1,v2,v3
1.local version control
2.centralized version control System(cvcs)
 -commit
 -update
3.Distributed version control System

--git 2005
 -simple to use 
 - fast
 -Branching
 -fully Distributed

--instalation
 ~ git --version
 ~ git Download

 authorization

 --git config
 ~git config --global user.name "Kumar"
 ~git config --global user.email "Gogula@gmail.com"


--usage
~open working folder
~open in powershall
-first we have Initilize the repo so we have write command like
~git init(create a repo) its hidden repo
-default makes master Branch
~git init -b main


--How add files
 (if create add file as general then)
 ~chech git status (Show untack files exist in red)
 then
 ~git add filename(name.text)
(check git status)
~ git status(show file is track but not commit)
~git commit -m "intial"  (-m message)
(now file tracked by git and its provide number )
(follw checksum generate by SHH-1)
~git log 

working dir --> stageing area(git add) --> commit History(git commit)

without enter into stageing
~git commit -a -m "Initial"

---Diff command----
 (change some code in file. if want know what exactly change in file then)
 ~ git diff(show in green ones)
 (if your at staging then check what your changed  then)
 ~git diff --staged

---How To remove a file form git ---------

--add all file to staged dir 
 ~git add.
 --dekete file
 ~git rm --cached hotel.txt(hotel.txt file name) 
 (now hotel.txt in unntracted means not in staged so you delete from working dir)

-------------------------------------------------------------------------------
~git clone url(copied all code of source code)HTTPS
(see content of the file)
~cat Git.txt

(list of the files)
~ls

(create file) 
~echo "Hello Kumar" >>README.md(md-mock Down)

--concept about the github(How To Work on Our own repo)
 --how to create and use that command in our local project
 ~git init
 ~git add .
 ~git commit -m "intial"
 ~git branch -M main
 ~git remote add origin ssh-keygen -o
 ~git push -u origin main

--pwd(present working directory)

---Now How to push file form working dir to git hub
 ~git commit -a -m "intial"
 ~git push origin master

~git remote -v(Which is your origin form server to client shows)

__Tags______


Tag--version
->Annotated Tagging(mostly use)
->LightWeight Tagging

~git tag -a v1.0 -m "1st realese"
~git tag(show all tags)
~git push origin v1.0

-------------------------------------------------------
(upTo Now we have seen How to work on our own repo 
 Now see how to work on other repo
)

~git log (all comments)
~git tag (show all tags)
~git show 1.79.0(show what is commit number  and date)
~git log --pretty=oneline

(if you made changes in source code )
 after that 
 ~git commit -a -m "message"
 ~git remote origin main(evnen you log  it but not allowed due no permission)

(create branch)
~git switch/chechout -c/-b feture(feture branch name)
~git branch(show what are the branches have)


(if in feture branch commit some code then you switch into main branch then 
main branch has no idea about the  feture branch commit code)

~git switch main(switch into main branch)
~git switch - (perivous branch)
~git branch -d feture(delete feture branch)
~git push origin branch1


_________________________
--merege branch and main
~git merge feture(feture is branch name )

--pull 
~git pull branch

----------------------------------------------------------------------------
if you have permission

-clone with master branch
-open with vs code
-make changes
-git branch b1 /git checkout -b b1 
-git add .
-git commit -m "Initial"
-git push origin b1



---git pull origin b1

automatically changes in master branch
-----------------------------------------------------
---------------------------------------------------------
if you don't have permission

-fist fork to your  git Hub
-clone project with your github http link
-open with vs code
-make changes
-git branch b1 /git checkout -b b1 
-git add .
-git commit -m "Initial"
-git push origin b1

-- send pull request
------------------------------------------------------------























  






 




 




