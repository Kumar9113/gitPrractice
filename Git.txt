Kumar
Kumar
cat "name.txt"


git init
ls
git status
git add .
git commit -m "Initial"
cat "name.txt"
git restore --staged name.txt(just un add data)

 git log(get all commit ids)
 rm -rf name.txt (delet file)
 git reset commitid 
 -- if check git status that shows like deletd:name.txt(in red)
Then
git add . (modified will add )(green)
git status

--create file
touch surname.txt(New-Item -ItemType File hotel.txt)
git add.
git status
(Show like name.txt->surname.txt)


Git Hub

git remote add origin htto:bbhdugduh

git remote -v (show all remote which are conneted to that project)

git push origin master


How to work in existing project


fork that project to your git Hub

git remote add upstream url(clone url)

git remote -v (Shows origin and upstream)

rmdir  .git (uninitilized the git)


----------------------------------------------------------------------------
if you have permission

-clone with master branch
-open with vs code
-make changes
-git branch b1 /git checkout -b b1 
-git add .
-git commit -m "Initial"
-git push origin b1



---git pull origin b1

automatically changes in master branch

---------------------------------------------------------
if you don't have permission

-fist fork to your  git Hub
-clone project with your github http link
-open with vs code
-make changes
-git branch b1 /git checkout -b b1 
-git add .
-git commit -m "Initial"
-git push origin b1

-- send pull request



--version control
make different version  v1,v2,v3
1.local version control
2.centralized version control System(cvcs)
 -commit
 -update
3.Distributed version control System

--git 2005
 -simple to use 
 - fast
 -Branching
 -fully Distributed

--instalation
 ~ git --version
 ~ git Download

 authorization

 --git config
 ~git config --global user.name "Kumar"
 ~git config --global user.email "Gogula@gmail.com"


--usage
~open working folder
~open in powershall
-first we have Initilize the repo so we have write command like
~git init(create a repo) its hidden repo
-default makes master Branch
~git init -b main


--How add files
 (if create add file as general then)
 ~chech git status (Show untack files exist in red)
 then
 ~git add filename(name.text)
(check git status)
~ git status(show file is track but not commit)
~git commit -m "intial"  (-m message)
(now file tracked by git and its provide number )
(follw checksum generate by SHH-1)
~git log 

working dir --> stageing area(git add) --> commit History(git commit)

without enter into stageing
~git commit -a -m "Initial"









  






 




 




